test <- rbind(test, t(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i]))))
}
colMeans(test)
Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])
test <- data.frame(a = NULL,
b = NULL,
c = NULL)
for (j in 1:10000) {
test <- rbind(test, t(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i]))))
}
colMeans(test)
Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])
rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i]))
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
data.frame(id   = j,
from = i_o,
to   = i_n,
time = t)
i_o <- 1
which(diag(Q) == 0)
n <- 100
u <- runif(1, 0, 1)
t <- -ln(u) / sum(Q[i, -i])
i_o <- 1
which(diag(Q) == 0)
n <- 100
u <- runif(1, 0, 1)
t <- -log(u) / sum(Q[i, -i])
i_n <- which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
data.frame(id   = j,
from = i_o,
to   = i_n,
time = t)
j <- 1
data.frame(id   = j,
from = i_o,
to   = i_n,
time = t)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])
test
trans_data < data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
dim(trans_data)
j <- 1
i_o <- 1
t_o <- 0
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
while (i_o %in% which(diag(Q) == 0)) {
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i, -i]) + t_o
i_n <- which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
if(nrow(trans_data) == 0) {
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
}else {
trans_data <- rbind(trans_data, data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n))
}
t_o <- t_n
i_o <- i_n
}
trans_data
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i, -i]) + t_o
i_n <- which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
nrow(trans_data) == 0
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
trans_data
i_o
which(diag(Q) == 0)
i_o <- 1
t_o <- 0
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
while(!(i_o %in% which(diag(Q) == 0))) {
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i, -i]) + t_o
i_n <- which(rmultinom(1, 1, Q[i, -c(i, which(Q[i, ] == 0))] / sum(Q[i, -i])) != 0)
if(nrow(trans_data) == 0) {
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
}else {
trans_data <- rbind(trans_data, data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n))
}
t_o <- t_n
i_o <- i_n
}
trans_data
i_o <- 1
t_o <- 0
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
while(!(i_o %in% which(diag(Q) == 0))) {
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i_o, -i_o]) + t_o
i_n <- which(rmultinom(1, 1, Q[i_o, -c(i_o, which(Q[i_o, ] == 0))] / sum(Q[i_o, -i_o])) != 0)
if(nrow(trans_data) == 0) {
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
}else {
trans_data <- rbind(trans_data, data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n))
}
t_o <- t_n
i_o <- i_n
}
trans_data
Q
Q[i_o, -i_o]
Q
i_o <- 1
t_o <- 0
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i_o, -i_o]) + t_o
Q
Q[i_o, -i_o]
Q[i_o, -i_o] / sum(Q[i_o, -i_o])
i_n <- which(rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o])) != 0)
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o]))
i_o <- 1
t_o <- 0
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
while(!(i_o %in% which(diag(Q) == 0))) {
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i_o, -i_o]) + t_o
i_n <- which(rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o])) != 0) + 1
if(nrow(trans_data) == 0) {
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
}else {
trans_data <- rbind(trans_data, data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n))
}
t_o <- t_n
i_o <- i_n
}
trans_data
n <- 100
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
for (j in 1:n) {
i_o <- 1
t_o <- 0
while(!(i_o %in% which(diag(Q) == 0))) {
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i_o, -i_o]) + t_o
i_n <- which(rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o])) != 0) + 1
if(nrow(trans_data) == 0) {
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
}else {
trans_data <- rbind(trans_data, data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n))
}
t_o <- t_n
i_o <- i_n
}
}
trans_data
tra <- matrix(ncol = nrow(Q),
nrow = nrow(Q),
FALSE)
tra
acc_1 <- unique(trans_data[trans_data$to != "cens", 2:3])
acc_1$to <- as.numeric(acc_1$to)
for (i in 1:nrow(acc_1)) {
tra[acc_1[i, 1], acc_1[i, 2]] <- TRUE
}
tra
# etm
tr.prob <- etm(trans_data, c("1", "2", "3", "4", "5"), tra, "cens", 0)
library(etm)
# etm
tr.prob <- etm(trans_data, c("1", "2", "3", "4", "5"), tra, "cens", 0)
tr.prob
p <- c(1, 0, 0, 0, 0)
p_time <- data.frame(t = 0,
p,
State = c("3: Alive w/o SA Pneu.",
"4: SA Pneu.",
"2: Extubated",
"1: Hosp. Disch.",
"5: Death"))
for (i in 1:dim(tr.prob$est)[3]) {
acc_1 <- data.frame(t = as.numeric(names(tr.prob$est[1, 1, ])[i]),
p = (p %*% tr.prob$est[, , i])[1, ],
State = c("3: Alive w/o SA Pneu.",
"4: SA Pneu.",
"2: Extubated",
"1: Hosp. Disch.",
"5: Death"))
p_time <- rbind(p_time, acc_1)
}
p_time <- p_time[order(p_time$State, p_time$t), ]
pl <- ggplot(p_time,
aes(x    = t,
y    = p,
fill = State)) +
labs(x = "\n days ",
y = "Probability \n") +
scale_fill_manual(values = c("#424144",
"#737277",
"#405996",
"#CFBC69",
"#A4944E")) +
geom_area(alpha = 0.8) +
ggtitle(trt) +
theme_classic()
library(ggplot2)
pl <- ggplot(p_time,
aes(x    = t,
y    = p,
fill = State)) +
labs(x = "\n days ",
y = "Probability \n") +
scale_fill_manual(values = c("#424144",
"#737277",
"#405996",
"#CFBC69",
"#A4944E")) +
geom_area(alpha = 0.8) +
ggtitle(trt) +
theme_classic()
pl <- ggplot(p_time,
aes(x    = t,
y    = p,
fill = State)) +
labs(x = "\n days ",
y = "Probability \n") +
scale_fill_manual(values = c("#424144",
"#737277",
"#405996",
"#CFBC69",
"#A4944E")) +
geom_area(alpha = 0.8) +
theme_classic()
pl
c(trans_data$from, trans_data$to)
unique(c(trans_data$from, trans_data$to))
ndistinct(c(trans_data$from, trans_data$to))
library(dplyr)
ndistinct(c(trans_data$from, trans_data$to))
n_distinct(c(trans_data$from, trans_data$to))
trans_data
trans_data$time > 30
which(trans_data$time > 30)
which(trans_data$time > 12)
acc <- which(trans_data$time > 12)
trans_data[acc, "to"] <- "cens"
trans_data
t_max <- 2
n <- 100
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
for (j in 1:n) {
i_o <- 1
t_o <- 0
while(!(i_o %in% which(diag(Q) == 0))) {
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i_o, -i_o]) + t_o
i_n <- which(rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o])) != 0) + 1
if(nrow(trans_data) == 0) {
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
}else {
trans_data <- rbind(trans_data, data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n))
}
t_o <- t_n
i_o <- i_n
}
}
trans_data
acc <- which(trans_data$time > t_max)
acc
trans_data[acc, "to"] <- "cens"
trans_data[acc, "time"] <- t_max
trans_data
tra <- matrix(ncol = n_distinct(c(trans_data$from, trans_data$to)),
nrow = n_distinct(c(trans_data$from, trans_data$to)),
FALSE)
acc_1 <- unique(trans_data[trans_data$to != "cens", 2:3])
acc_1$to <- as.numeric(acc_1$to)
for (i in 1:nrow(acc_1)) {
tra[acc_1[i, 1], acc_1[i, 2]] <- TRUE
}
# etm
tr.prob <- etm(trans_data, c("1", "2", "3", "4", "5"), tra, "cens", 0)
tra
sum(unique(c(trans_data$from, trans_data$to)) != "cens")
tra <- matrix(ncol = sum(unique(c(trans_data$from, trans_data$to)) != "cens"),
nrow = sum(unique(c(trans_data$from, trans_data$to)) != "cens"),
FALSE)
acc_1 <- unique(trans_data[trans_data$to != "cens", 2:3])
acc_1$to <- as.numeric(acc_1$to)
for (i in 1:nrow(acc_1)) {
tra[acc_1[i, 1], acc_1[i, 2]] <- TRUE
}
# etm
tr.prob <- etm(trans_data, c("1", "2", "3", "4", "5"), tra, "cens", 0)
trans_data[trans_data$to == "cens", "id"]
unique(trans_data[trans_data$to == "cens", "id"])
acc <- unique(trans_data[trans_data$to == "cens", "id"])
trans_data[trans_data$id %in% acc, ]
trans_data[trans_data$id %in% acc & trans_data$to == "cens", ]
trans_data[trans_data$id %in% acc & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(test = length(time))
acc <- trans_data[trans_data$id %in% acc & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(test = length(time))
acc$test != 0
acc$test != 1
acc[acc$test != 1, "id"]
if(sum(acc$test != 1) > 0) {
acc <- acc[acc$test != 1, "id"]
}
acc
trans_data[trans_data$id %in% acc$id, ]
t_max <- 2
n <- 100
trans_data <- data.frame(id   = NULL,
from = NULL,
to   = NULL,
time = NULL)
for (j in 1:n) {
i_o <- 1
t_o <- 0
while(!(i_o %in% which(diag(Q) == 0))) {
u <- runif(1, 0, 1)
t_n <- -log(u) / sum(Q[i_o, -i_o]) + t_o
i_n <- which(rmultinom(1, 1, Q[i_o, -i_o] / sum(Q[i_o, -i_o])) != 0) + 1
if(nrow(trans_data) == 0) {
trans_data  <- data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n)
}else {
trans_data <- rbind(trans_data, data.frame(id   = j,
from = i_o,
to   = i_n,
time = t_n))
}
t_o <- t_n
i_o <- i_n
}
}
acc <- which(trans_data$time > t_max)
trans_data[acc, "to"] <- "cens"
acc <- unique(trans_data[trans_data$to == "cens", "id"])
acc <- trans_data[trans_data$id %in% acc & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(test = length(time))
if(sum(acc$test != 1) > 0) {
acc <- acc[acc$test != 1, "id"]
}
trans_data[trans_data$id %in% acc$id, ]
trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ]
trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(time = min(time))
acc <- trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(time = min(time))
acc
acc <- unique(trans_data[trans_data$to == "cens", "id"])
acc <- trans_data[trans_data$id %in% acc & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(test = length(time))
if(sum(acc$test != 1) > 0) {
acc <- acc[acc$test != 1, "id"]
}
acc
trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(time = min(time))
acc_1 <- trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(time = min(time))
acc
trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ]
acc <- trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ] %>% group_by(id) %>% summarise(time = min(time))
acc
which(!(trans_data[trans_data$id %in% acc$id & trans_data$to == "cens", ]$time %in% acc$time))
library(expm)
Q <- matrix(0, nrow = 5, ncol = 5)
l_12 <- runif(1, 0, 1)
l_13 <- runif(1, 0, 1)
l_15 <- runif(1, 0, 1)
l_23 <- runif(1, 0, 1)
l_25 <- runif(1, 0, 1)
l_34 <- runif(1, 0, 1)
l_35 <- runif(1, 0, 1)
Q[1, 2] <- l_12
Q[1, 3] <- l_13
Q[1, 5] <- l_15
Q[2, 3] <- l_23
Q[2, 5] <- l_25
Q[3, 4] <- l_34
Q[3, 5] <- l_35
diag(Q) <- -rowSums(Q)
l_1 <- Q[1, 1]
l_2 <- Q[2, 2]
l_3 <- Q[3, 3]
t <- runif(1, 0, 10)
expm(Q * t)
exp(l_1 * t)
l_12 / (l_1 - l_2) * (exp(l_1 * t) - exp(l_2 * t))
version
license()
setwd(choose.dir())
library(shiny)
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
# setwd(choose.dir()) # choose the folder of this script
runApp()
